{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnc\\\\Documents\\\\full-stack-open\\\\part2\\\\course-information\\\\src\\\\Courses.js\";\nimport React from \"react\";\n\nconst Course = props => {\n  const {\n    name,\n    parts\n  } = props.data;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \" \", name, \" \"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, parts.map(part => /*#__PURE__*/React.createElement(\"li\", {\n    key: part.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  }, \" \", part.name, \" has \", part.exercises, \" exercises\", \" \"))));\n};\n\nconst getTotalExercises = courses => courses.reduce((acc, {\n  parts\n}) => acc + parts.reduce((acc, {\n  exercises\n}) => acc + exercises, 0), 0);\n\nconst Courses = props => {\n  const {\n    data\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \" \", data.map(course => /*#__PURE__*/React.createElement(Course, {\n    data: course,\n    key: course.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \" Total of \", getTotalExercises(data), \" exercises \"));\n};\n\nexport default Courses;","map":{"version":3,"sources":["C:/Users/johnc/Documents/full-stack-open/part2/course-information/src/Courses.js"],"names":["React","Course","props","name","parts","data","map","part","id","exercises","getTotalExercises","courses","reduce","acc","Courses","course"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBF,KAAK,CAACG,IAA9B;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMF,IAAN,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACT;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEGD,IAAI,CAACJ,IAFR,WAEmBI,IAAI,CAACE,SAFxB,gBAE6C,GAF7C,CADD,CADH,CAFF,CADF;AAaD,CAhBD;;AAiBA,MAAMC,iBAAiB,GAAIC,OAAD,IACxBA,OAAO,CAACC,MAAR,CACE,CAACC,GAAD,EAAM;AAAET,EAAAA;AAAF,CAAN,KACES,GAAG,GAAGT,KAAK,CAACQ,MAAN,CAAa,CAACC,GAAD,EAAM;AAAEJ,EAAAA;AAAF,CAAN,KAAwBI,GAAG,GAAGJ,SAA3C,EAAsD,CAAtD,CAFV,EAGE,CAHF,CADF;;AAOA,MAAMK,OAAO,GAAIZ,KAAD,IAAW;AACzB,QAAM;AAAEG,IAAAA;AAAF,MAAWH,KAAjB;AACA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEGG,IAAI,CAACC,GAAL,CAAUS,MAAD,iBACR,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEA,MAAd;AAAsB,IAAA,GAAG,EAAEA,MAAM,CAACP,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcE,iBAAiB,CAACL,IAAD,CAA/B,gBAPF,CADF;AAWD,CAbD;;AAeA,eAAeS,OAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst Course = (props) => {\r\n  const { name, parts } = props.data;\r\n\r\n  return (\r\n    <div>\r\n      <h2> {name} </h2>\r\n      <ul>\r\n        {parts.map((part) => (\r\n          <li key={part.id}>\r\n            {\" \"}\r\n            {part.name} has {part.exercises} exercises{\" \"}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nconst getTotalExercises = (courses) =>\r\n  courses.reduce(\r\n    (acc, { parts }) =>\r\n      acc + parts.reduce((acc, { exercises }) => acc + exercises, 0),\r\n    0\r\n  );\r\n\r\nconst Courses = (props) => {\r\n  const { data } = props;\r\n  return (\r\n    <>\r\n      <div>\r\n        {\" \"}\r\n        {data.map((course) => (\r\n          <Course data={course} key={course.id}></Course>\r\n        ))}\r\n      </div>\r\n      <p> Total of {getTotalExercises(data)} exercises </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Courses;\r\n"]},"metadata":{},"sourceType":"module"}